{
  "Compress-18": {
    "The root cause of the bug is that the `writePaxHeaders` function does not correctly handle the case where the length of the PAX header exceeds the maximum allowed size. Specifically, the function does not correctly calculate the size of the PAX header when the entry name is non-ASCII. This causes the function to write a PAX header with a size of 0, which is then exceeded by the actual data being written.": [
      "Correctly Calculate PAX Header Size\nWe can fix the bug by correctly calculating the size of the PAX header. We can do this by using the `StringWriter` to write the PAX header and then getting the length of the resulting string. We can then use this length to set the size of the PAX header. Here is the modified code:\n```java\nStringWriter w = new StringWriter();\n// ... write PAX header to w\nbyte[] data = w.toString().getBytes(CharsetNames.UTF_8);\npex.setSize(data.length);\n```\nThis fix ensures that the size of the PAX header is correctly calculated, even when the entry name is non-ASCII.",
      "Use a More Robust PAX Header Size Calculation\nAnother way to fix the bug is to use a more robust PAX header size calculation. We can do this by using the `CharsetEncoder` to encode the PAX header and then getting the length of the resulting bytes. We can then use this length to set the size of the PAX header. Here is the modified code:\n```java\nCharsetEncoder encoder = Charset.forName(CharsetNames.UTF_8).newEncoder();\nByteBuffer bb = encoder.encode(CharBuffer.wrap(w.toString()));\npex.setSize(bb.remaining());\n```\nThis fix ensures that the size of the PAX header is correctly calculated, even when the entry name is non-ASCII.",
      "Handle PAX Header Size Exceeding Maximum Allowed Size\nFinally, we can fix the bug by handling the case where the PAX header size exceeds the maximum allowed size. We can do this by checking if the PAX header size exceeds the maximum allowed size and if so, throwing an exception. Here is the modified code:\n```java\nif (data.length > TarConstants.NAMELEN) {\n    throw new IOException(\"PAX header size exceeds maximum allowed size\");\n}\n```\nThis fix ensures that the PAX header size is correctly handled, even when it exceeds the maximum allowed size."
    ]
  }
}