{
  "Mockito-3": {
    "The issue is caused by the incorrect calculation of the `indexOfVararg` variable. When the method is a varargs method, the `indexOfVararg` is set to the last index of the raw arguments array. However, when the method is not a varargs method, the `indexOfVararg` is not updated correctly, leading to an `ArrayIndexOutOfBoundsException` when trying to access the raw arguments array.": [
      "Update IndexOfVararg Calculation\nUpdate the calculation of the `indexOfVararg` variable to correctly handle both varargs and non-varargs methods. This can be done by checking if the method is a varargs method and updating the `indexOfVararg` accordingly. The updated code would be:\n```java\nif (invocation.getMethod().isVarArgs()) {\n    int indexOfVararg = invocation.getMethod().getParameterTypes().length - 1;\n    // ...\n} else {\n    int indexOfVararg = invocation.getMethod().getParameterTypes().length;\n    // ...\n}\n```",
      "Use Invocation.getArguments() Instead of Invocation.getRawArguments()\nUse the `getArguments()` method of the `Invocation` class instead of `getRawArguments()` to get the arguments. This method returns the arguments as an array, which can be used to avoid the `ArrayIndexOutOfBoundsException`. The updated code would be:\n```java\nfor (int position = indexOfVararg; position < invocation.getArguments().length; position++) {\n    Matcher m = matchers.get(position);\n    if (m instanceof CapturesArguments) {\n        ((CapturesArguments) m).captureFrom(invocation.getArguments()[position]);\n    }\n}\n```",
      "Check for Null or Empty Raw Arguments Array\nAdd a null check and an empty check for the raw arguments array before trying to access it. This can prevent the `ArrayIndexOutOfBoundsException` from occurring. The updated code would be:\n```java\nif (invocation.getRawArguments() != null && invocation.getRawArguments().length > 0) {\n    for (int position = indexOfVararg; position < invocation.getRawArguments().length; position++) {\n        Matcher m = matchers.get(position);\n        if (m instanceof CapturesArguments) {\n            ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);\n        }\n    }\n}\n```"
    ]
  }
}